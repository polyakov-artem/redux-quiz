{"version":3,"sources":["Components/ToggleBtn/ToggleBtn.js","Components/Button/Button.js","store/actionTypes/actionTypes.js","Components/SideMenu/SideMenu.js","store/actions/authFormActions.js","Components/Backdrop/Backdrop.js","Container/Layout/Layout.js","Components/QuizItem/QuizItem.js","Components/QuizResults/QuizResults.js","Components/Loader/Loader.js","axios/axios.js","store/actions/quizActions.js","Container/Quiz/Quiz.js","Components/QuizPage/QuizPage.js","Components/Input/Input.js","Components/AuthForm/AuthForm.js","Container/AuthPage/AuthPage.js","Components/Select/Select.js","Container/CreatingForm/CreatingForm.js","Components/CreatingPage/CreatingPage.js","store/actions/quizListPageActions.js","Container/QuizListPage/QuizListPage.js","App.js","serviceWorker.js","store/reducers/quizListPageReducer.js","store/reducers/quizReducer.js","store/reducers/authFormReducer.js","store/reducers/rootReducer.js","index.js"],"names":["ToggleBtn","props","menuIsOpen","toggleMenu","classArr","push","react_default","a","createElement","type","className","join","onClick","Button","theme","disabled","_props$type","classes","concat","children","QUIZ_LIST_LOADING_STARTED","QUIZ_LIST_SUCCESS","QUIZ_LIST_ERROR","SET_CURRENT_QUIZ_ID","QUIZ_LOADING_START","QUIZ_LOADING_END","QUIZ_SUCCESS","QUIZ_ERROR","RESET_QUIZ","SET_ANSWER","FINISH_QUIZ","NEXT_QUESTION","LOGIN_SUCCESS","LOGIN_EXIT","mapDispatchToProps","logoutHandler","connect","_ref2","authorized","authFormState","_ref","closeMenu","links","to","label","exact","id","map","link","key","react_router_dom","renderLinks","Button_Button","Backdrop_Backdrop","Layout","state","_this","setState","this","Fragment","Components_SideMenu_SideMenu","ToggleBtn_ToggleBtn","Component","QuizItem","quizState","chooseHandler","quiz","answersArray","chosenAnswerId","numberOfQuestion","currentQuizItem","answers","answerState","question","length","answer","index","stateClass","bind","text","QuizResults","navigateToList","retryHandler","numOfCorrect","reduce","total","currentItem","item","iconClasses","Loader","axios","create","baseURL","setAnswer","Quiz","history","pathname","match","params","_this$props","setCurrentQuizId","getQuiz","_this$props2","loading","quizesState","currentQuizId","error","resetQuiz","quizes","Loader_Loader","isFinished","QuizResults_QuizResults","Components_QuizItem_QuizItem","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","response","wrap","_context","prev","next","get","sent","data","t0","e","stop","_x","_x2","apply","arguments","_callee2","_getState$quizesState","_quizes$currentQuizId","_context2","abrupt","rightAnswerId","setTimeout","_x3","_x4","withRouter","QuizPage","Container_Quiz_Quiz","Input","htmlFor","_props$value","value","onChange","isValid","errorMessage","touched","initialState","isFormValid","inputs","email","valid","validation","required","password","minLength","AuthForm","onChangeHandler","inputName","event","objectSpread","input","target","validateControl","keys","every","resetForm","getAuthData","returnSecureToken","loginHandler","post","registered","loginSuccess","processError","registerHandler","errorType","submitHandler","action","preventDefault","trim","_this2","Input_Input","onSubmit","renderInputs","AuthPage","Components_AuthForm_AuthForm","React","Select","sendError","submitting","option1","option2","option3","option4","CreateTestForm","addQuestion","_this$state","_this$state$inputs","toConsumableArray","createTest","console","log","selectChangeHandler","_this$state2","Select_Select","CreatingPage","CreatingForm_CreatingForm","quizListSuccess","QuizListPage","getQuizList","name","list","renderQuizes","quizListPageState","quizKey","App","Container_Layout_Layout","react_router","path","render","Container_AuthPage_AuthPage","component","Boolean","window","location","hostname","quizInitialState","combineReducers","undefined","getUpdatedQuizes","prop","defineProperty","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","es","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62e37bb7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './ToggleBtn.scss';\r\n\r\n\r\nexport default function ToggleBtn(props){\r\n  let {menuIsOpen, toggleMenu} = props;\r\n\r\n  const classArr =[ 'fa', 'toggle-btn' ]\r\n\r\n  menuIsOpen\r\n    ? classArr.push('fa-times', 'toggle-btn_is_active')\r\n    : classArr.push('fa-bars');\r\n\r\n  return (\r\n    <button\r\n      type='button'\r\n      className = {classArr.join(' ')}\r\n      onClick = {toggleMenu} \r\n    />\r\n  ) \r\n}","import React from 'react';\r\nimport './Button.scss';\r\n\r\nexport default function Button(props){\r\n  const {theme, disabled, onClick, type='button', classes}= props;\r\n  const classArr =[\r\n    'btn',\r\n    theme? `btn_theme_${theme}`: '',\r\n    disabled? `btn_is_disabled`: '',\r\n    classes\r\n  ];\r\n\r\n  return (\r\n    <button\r\n      type = {type}\r\n      className = {classArr.join(' ')}\r\n      onClick = {onClick} \r\n      disabled = {disabled}>\r\n      {props.children}\r\n    </button>\r\n  )\r\n}","export const QUIZ_LIST_LOADING_STARTED = 'QUIZ_LIST_LOADING_STARTED';\r\nexport const QUIZ_LIST_SUCCESS = 'QUIZ_LIST_SUCCESS';\r\nexport const QUIZ_LIST_ERROR = 'QUIZ_LIST_ERROR';\r\n\r\nexport const SET_CURRENT_QUIZ_ID = 'SET_CURRENT_QUIZ_ID';\r\nexport const QUIZ_LOADING_START = 'QUIZ_LOADING_START';\r\nexport const QUIZ_LOADING_END = 'QUIZ_LOADING_END';\r\nexport const QUIZ_SUCCESS = 'QUIZ_SUCCESS';\r\nexport const QUIZ_ERROR = 'QUIZ_ERROR';\r\nexport const RESET_QUIZ = 'RESET_QUIZ';\r\nexport const SET_ANSWER = 'SET_ANSWER';\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\r\nexport const NEXT_QUESTION = 'NEXT_QUESTION';\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_EXIT = 'LOGIN_EXIT';","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './SideMenu.scss';\r\nimport Button from '../Button/Button';\r\nimport { logoutHandler } from '../../store/actions/authFormActions';\r\n\r\nconst SideMenu = ({closeMenu, authorized, menuIsOpen, logoutHandler})=>{\r\n  \r\n  function renderLinks(){\r\n    const links = [\r\n      {to: '/redux-quiz/', label:'Список тестов', exact: true, id: 1},\r\n    ];\r\n\r\n    authorized\r\n      ? links.push({to: '/redux-quiz/quiz-creator', label:'Создать тест', exact: false, id: 3})\r\n      : links.push({to: '/redux-quiz/auth', label:'Авторизация', exact: false, id: 2});\r\n\r\n    return links.map((link)=>{\r\n      return (\r\n        <li\r\n          className = 'side-menu__item'\r\n          key = {link.id}>\r\n          <NavLink\r\n            className = 'side-menu__link'\r\n            to={link.to}\r\n            exact = {link.exact}\r\n            onClick = {closeMenu}>\r\n            {link.label}\r\n          </NavLink> \r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div className = {`side-menu ${menuIsOpen? '': 'side-menu_is_closed'}`}>\r\n      <nav>\r\n        <ul className = 'side-menu__list'>\r\n          {renderLinks()}\r\n        </ul>\r\n      </nav>\r\n      <Button \r\n        theme ='info'\r\n        onClick={logoutHandler}>\r\n        Выйти\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction mapStateToProps({authFormState}){\r\n  return{\r\n    authorized: authFormState.authorized\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps ={\r\n  logoutHandler: logoutHandler\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideMenu);","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_EXIT\r\n} from '../actionTypes/actionTypes';\r\n\r\n\r\n\r\nexport function loginSuccess(){\r\n  return {type: LOGIN_SUCCESS}\r\n}\r\n\r\n\r\nexport function logoutHandler(){\r\n  return {type: LOGIN_EXIT}\r\n}","import React from 'react'\r\nimport './Backdrop.css';\r\n\r\n\r\nexport default props => {\r\n  return (\r\n      <div className = 'backdrop' onClick = {props.onClick}> </div>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport ToggleBtn from '../../Components/ToggleBtn/ToggleBtn';\r\nimport SideMenu from '../../Components/SideMenu/SideMenu';\r\nimport Backdrop from '../../Components/Backdrop/Backdrop';\r\n\r\nimport './Layout.css';\r\n\r\n\r\nclass Layout extends Component{\r\n  state = {\r\n    menuIsOpen: false\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.setState ({\r\n      menuIsOpen: !this.state.menuIsOpen\r\n    })\r\n  }\r\n\r\n  closeMenu = () => {\r\n    this.setState ({\r\n      menuIsOpen: false\r\n    })\r\n  }\r\n\r\n  render(){\r\n    let {menuIsOpen} = this.state\r\n    return(\r\n      <React.Fragment>\r\n        <SideMenu menuIsOpen = {menuIsOpen} closeMenu = {this.closeMenu} />\r\n        <ToggleBtn menuIsOpen = {menuIsOpen} toggleMenu = {this.toggleMenu}  />\r\n        { menuIsOpen && <Backdrop onClick={this.closeMenu} /> }\r\n        {this.props.children}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout","import React from 'react'\r\nimport './QuizItem.scss';\r\n\r\nconst QuizItem = (props) => {\r\n  const {quizState, chooseHandler} = props;\r\n  const {quiz, answersArray, chosenAnswerId, numberOfQuestion} = quizState;\r\n  const currentQuizItem = quiz[numberOfQuestion];\r\n  const answers = currentQuizItem.answers;\r\n  const answerState = answersArray[numberOfQuestion];\r\n\r\n  const renderAnswersList=()=>{\r\n    return(\r\n      <ul className = 'quiz-item__answers'>\r\n        {answers.map((answer, index)=>{\r\n          const stateClass = answerState ? `quiz-item__answer_is_${answerState}`: '';\r\n          const classes = `quiz-item__answer ${ chosenAnswerId ===  answer.id? stateClass: ''}`;\r\n          return (\r\n            <li\r\n              className = {classes}\r\n              key = {answer.id}\r\n              answer ={answer}\r\n              onClick = {chooseHandler.bind(this, answer.id)} >\r\n                <span>{index+1}</span>\r\n                {answer.text}\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  return (\r\n   <div className = 'quiz-item'>\r\n      <p className = 'quiz-item__question '>\r\n        <span> { currentQuizItem.question} </span>\r\n        <span>{ numberOfQuestion+1} из { quiz.length}</span>\r\n      </p>\r\n      {renderAnswersList()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuizItem","import React from 'react';\r\nimport './QuizResults.scss';\r\nimport Button from '../Button/Button';\r\n\r\nexport default function QuizResults (props){\r\n  const {answersArray, navigateToList, quizState, retryHandler} = props;\r\n\r\n  const numOfCorrect = answersArray.reduce( (total, currentItem)=>{\r\n    return total + ( currentItem === 'correct'? 1: 0 )\r\n  }, 0 );\r\n\r\n  const renderAnswersList = () => (\r\n    <ul>\r\n      {answersArray.map( (item, index) => {\r\n        const iconClasses = item === 'correct'\r\n          ? 'fas fa-check-circle icon-success quiz-results__icon-success'\r\n          : 'far fa-times-circle icon-fail quiz-results__icon-fail';\r\n        return (\r\n          <li className='quiz-results__question' key = {index}>\r\n            <span>{index +1}. </span> \r\n            {quizState.quiz[index].question}\r\n            <i className={iconClasses}></i>\r\n          </li>\r\n        )}\r\n      )}\r\n    </ul>\r\n  )\r\n\r\n  return (\r\n    <div className = 'quiz-results' >\r\n      <h2 className = 'quiz-results__title'>Ваши ответы</h2>\r\n      {renderAnswersList()}\r\n      <p>Правильных ответов: {numOfCorrect} из {quizState.quiz.length}</p>\r\n      <div className='quiz-results__buttons'>\r\n        <Button\r\n          onClick={navigateToList}\r\n          theme='success'\r\n          classes='quiz-results__btn'>\r\n          Перейти в список тестов\r\n        </Button>\r\n        <Button\r\n          onClick={retryHandler}\r\n          theme='success'\r\n          classes='quiz-results__btn'>\r\n          Повторить\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport './Loader.css'\r\n\r\nexport default function Loader(props){\r\n  const classes =['loader', props.classes && `${props.classes}__loader`].join(' ');\r\n  return(\r\n    <div className={classes} /> \r\n  )\r\n}","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://react-quiz-b6c1f.firebaseio.com/'\r\n})","import axios from '../../axios/axios';\r\n\r\nimport {\r\n  QUIZ_LOADING_START,\r\n  QUIZ_LOADING_END,\r\n  QUIZ_SUCCESS,\r\n  QUIZ_ERROR,\r\n  RESET_QUIZ,\r\n  SET_ANSWER,\r\n  FINISH_QUIZ,\r\n  NEXT_QUESTION,\r\n  SET_CURRENT_QUIZ_ID\r\n} from '../actionTypes/actionTypes';\r\n\r\n\r\nexport function getQuiz(id){\r\n  return async function(dispatch, getState){\r\n    const quizState = getState().quizesState.quizes[id];\r\n\r\n    dispatch(startQuizLoading());\r\n    if (!(quizState && quizState.quiz && quizState.quiz.length)){\r\n      try{\r\n        const response = await axios.get('/quizes/'+id+'.json');\r\n        dispatch(quizSuccess(response.data));\r\n      } catch (e){\r\n        dispatch(quizError(e))\r\n      }\r\n    } \r\n    dispatch(endQuizLoading());\r\n  }\r\n}\r\n\r\nexport function setCurrentQuizId(id){\r\n  return {\r\n    type: SET_CURRENT_QUIZ_ID, id \r\n  }\r\n}\r\n\r\nexport function startQuizLoading(){\r\n  return {\r\n    type: QUIZ_LOADING_START\r\n  }\r\n}\r\n\r\nexport function endQuizLoading(){\r\n  return {\r\n    type: QUIZ_LOADING_END\r\n  }\r\n}\r\n\r\n\r\nexport function quizSuccess(quiz){\r\n  return {\r\n    type: QUIZ_SUCCESS,\r\n    quiz,\r\n  }\r\n}\r\n\r\nexport function quizError(e){\r\n  return {\r\n    type: QUIZ_ERROR,\r\n    error: e,\r\n  }\r\n}\r\n\r\nexport function resetQuiz(){\r\n  return {\r\n    type: RESET_QUIZ\r\n  }\r\n}\r\n\r\nexport function chooseHandler(chosenAnswerId){\r\n  return async function(dispatch, getState){\r\n\r\n    const {currentQuizId, quizes} = getState().quizesState;\r\n    const {quiz, numberOfQuestion, answersArray} = quizes[currentQuizId];\r\n\r\n    if( answersArray[numberOfQuestion] ) {\r\n      dispatch({type: 'default'});\r\n      return\r\n    };\r\n\r\n    if (quiz[numberOfQuestion].rightAnswerId === chosenAnswerId) {\r\n        dispatch(setAnswer({state:'correct', chosenAnswerId}))\r\n    } else{\r\n        dispatch(setAnswer({state:'incorrect', chosenAnswerId}))\r\n    };\r\n\r\n    setTimeout( \r\n      ()=>{ \r\n        if (numberOfQuestion +1 !== quiz.length) {\r\n          dispatch(nextQuiestion())\r\n        } else \r\n          dispatch(finishQuiz())\r\n      }, 500)\r\n  }\r\n}\r\n\r\nexport function setAnswer(answer){\r\n  return {\r\n    type: SET_ANSWER,\r\n    answer\r\n  }\r\n}\r\n\r\nexport function finishQuiz(){\r\n  return {\r\n    type: FINISH_QUIZ\r\n  }\r\n}\r\n\r\nexport function nextQuiestion(){\r\n  return {\r\n    type: NEXT_QUESTION,\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport QuizItem from '../../Components/QuizItem/QuizItem'\r\nimport QuizResults from '../../Components/QuizResults/QuizResults'\r\nimport Loader from '../../Components/Loader/Loader'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {getQuiz, resetQuiz, chooseHandler, setCurrentQuizId} from '../../store/actions/quizActions'\r\n\r\nimport './Quiz.scss';\r\n\r\nclass Quiz extends Component{\r\n\r\n  componentDidMount(){\r\n    const id = this.props.match.params.id;\r\n    const {setCurrentQuizId, getQuiz} = this.props;\r\n\r\n    setCurrentQuizId(id);\r\n    getQuiz(id);\r\n  }\r\n\r\n  navigateToList = ()=>{\r\n    this.props.history.push({\r\n      pathname: '/redux-quiz'\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {loading, quizesState, currentQuizId, error, resetQuiz, chooseHandler} = this.props;\r\n    const quizState = quizesState.quizes[currentQuizId];\r\n\r\n    return(\r\n      <div className ='quiz'>\r\n        { error \r\n          ? <p>Произошла ошибка во время загрузки</p>\r\n          : (loading)\r\n            ? <Loader classes='quiz' />\r\n            : (quizState.isFinished)\r\n              ? <QuizResults \r\n                  navigateToList = {this.navigateToList}\r\n                  answersArray = {quizState.answersArray}\r\n                  quizState = {quizState}\r\n                  retryHandler = {resetQuiz} />\r\n              : <QuizItem\r\n                  quizState = {quizState}\r\n                  chooseHandler = {chooseHandler}\r\n                />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps({quizesState}){\r\n  return {\r\n    quizesState: quizesState,\r\n    loading: quizesState.loading,\r\n    error: quizesState.error,\r\n    currentQuizId: quizesState.currentQuizId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getQuiz: getQuiz,\r\n  resetQuiz: resetQuiz,\r\n  chooseHandler: chooseHandler,\r\n  setCurrentQuizId: setCurrentQuizId\r\n}\r\n\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(withRouter(Quiz))","import React from 'react'\r\nimport './QuizPage.scss';\r\n\r\nimport Quiz from '../../Container/Quiz/Quiz'\r\n\r\nfunction QuizPage() {\r\n  return (\r\n    <div className = 'quiz-page'>\r\n      <h1 className ='quiz-page__header'>Тест</h1>\r\n      <Quiz />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuizPage","import React from 'react';\r\nimport './Input.scss';\r\n\r\n\r\nexport default function Input (props){\r\n  const {\r\n    htmlFor,\r\n    value = '',\r\n    onChange,\r\n    type= 'text',\r\n    label,\r\n    isValid,\r\n    errorMessage,\r\n    touched\r\n  } = props;\r\n\r\n  return (\r\n    <div className = 'input'>\r\n      <label \r\n        className = 'input__label'\r\n        htmlFor={htmlFor}>\r\n        {label}\r\n      </label>\r\n      <input\r\n        className = 'input__control'\r\n        id ={htmlFor}\r\n        type ={type}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      { !isValid && touched && <small className = 'input__message'>{errorMessage}</small>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import './AuthForm.scss';\r\nimport Button from '../Button/Button'\r\nimport Input from '../Input/Input'\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loginSuccess } from '../../store/actions/authFormActions';\r\nimport axios from 'axios'\r\n\r\nconst initialState ={\r\n  error: false,\r\n  isFormValid: false,\r\n  inputs: {\r\n    email: {\r\n      id: 1,\r\n      value: '',\r\n      type: 'email',\r\n      label: 'Email',\r\n      errorMessage: 'Wrong Email',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n      }\r\n    },\r\n    password: {\r\n      id: 2,\r\n      value: '',\r\n      type: 'password',\r\n      label: 'Password',\r\n      errorMessage: 'Wrong password',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n        minLength: 6\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass AuthForm extends Component {\r\n  state = {...initialState}\r\n\r\n  validateControl(value, validation){\r\n    if(!validation) return true;\r\n    let isValid = true;\r\n\r\n    if(validation.required){\r\n      isValid = value.trim()!=='' && isValid\r\n    }\r\n\r\n    if(validation.minLength){\r\n      isValid = value.length >= validation.minLength && isValid\r\n    }\r\n     return isValid\r\n  }\r\n\r\n \r\n  onChangeHandler = (inputName, event) => {\r\n    const inputs = {...this.state.inputs};\r\n    const input = {...inputs[inputName]};\r\n    input.touched = true;\r\n\r\n    inputs[inputName] = input;\r\n\r\n    input.value = event.target.value;\r\n    input.valid = this.validateControl(input.value, input.validation);\r\n\r\n    const isFormValid = Object.keys(inputs).every((key)=> {\r\n      return inputs[key].valid\r\n    });\r\n    \r\n    this.setState({inputs, isFormValid})\r\n  }\r\n\r\n  resetForm = () =>{\r\n     this.setState(initialState);\r\n  }\r\n\r\n\r\n\r\n  renderInputs() {\r\n    const inputs = Object.keys(this.state.inputs).map((inputName)=> {\r\n      const input = this.state.inputs[inputName];\r\n      return (\r\n        <Input \r\n          touched = {input.touched}\r\n          key = {inputName + input.id} \r\n          value = {input.value}\r\n          type = {input.type}\r\n          label = {input.label}\r\n          htmlFor = {`${inputName}-${input.id}`}\r\n          errorMessage = {input.errorMessage}\r\n          isValid = {input.valid}\r\n          onChange = { this.onChangeHandler.bind(this,inputName) }\r\n        />\r\n      )\r\n    });\r\n    return inputs\r\n  }\r\n\r\n  getAuthData = ()=>{\r\n    return {\r\n      email: this.state.inputs.email.value,\r\n      password: this.state.inputs.password.value,\r\n      returnSecureToken: true\r\n    }\r\n  }\r\n\r\n  loginHandler = async () =>{\r\n    try{\r\n      const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyCUszkptpA2BUXeBs6J3EBRTJpcx8KdYSc', this.getAuthData())\r\n      if(response.data.registered) this.props.loginSuccess()\r\n    } catch{\r\n      this.processError('loginError')\r\n    }\r\n  }\r\n\r\n  registerHandler = async () =>{\r\n    try{\r\n      const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyCUszkptpA2BUXeBs6J3EBRTJpcx8KdYSc', this.getAuthData())\r\n      if(response) return this.props.loginSuccess()\r\n    } catch{\r\n      this.processError('regError')\r\n    }\r\n  }\r\n\r\n  processError = (errorType)=>{\r\n    this.setState({error: errorType})\r\n  }\r\n\r\n  submitHandler =(event, action)=>{\r\n    event.preventDefault();\r\n    this.resetForm();\r\n  }\r\n\r\n\r\n  render() {\r\n    const {error} = this.state;\r\n    const errorMessage = \r\n      (error === 'loginError' && <p className = 'auth-form__message'>Ошибка авторизации!</p>) ||\r\n      (error === 'regError' && <p className = 'auth-form__message'>Ошибка регистрации!</p>);\r\n\r\n    return (\r\n      <form action=\"\" onSubmit ={this.submitHandler} className = 'auth-form'>\r\n        {errorMessage}\r\n        { this.renderInputs() }\r\n        <div className = 'auth-form__buttons'>\r\n          <Button\r\n            type='submit'\r\n            disabled={!this.state.isFormValid} \r\n            onClick={this.loginHandler}\r\n            theme='success'\r\n            classes= 'auth-form__btn'>\r\n            Войти\r\n          </Button>\r\n          <Button\r\n            type='submit'\r\n            disabled={!this.state.isFormValid} \r\n            onClick={this.registerHandler}\r\n            theme='info'\r\n            classes= 'auth-form__btn'>\r\n            Зарегистрироваться\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps={\r\n  loginSuccess: loginSuccess,\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(AuthForm);","import React from 'react';\r\nimport './AuthPage.scss';\r\nimport AuthForm from '../../Components/AuthForm/AuthForm'\r\n\r\n\r\nclass AuthPage extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='auth-page'>\r\n        <h1 className='auth-page__title'>Авторизация</h1>\r\n        <AuthForm/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AuthPage;","import React from 'react';\r\nimport './Select.scss';\r\n\r\nexport default function Select (props){\r\n  const {\r\n    htmlFor,\r\n    value,\r\n    onChange,\r\n    label\r\n  } = props;\r\n\r\n  return (\r\n    <div className = 'select'>\r\n      <label \r\n        className = 'select__label'\r\n        htmlFor={htmlFor}>\r\n        {label}\r\n      </label>\r\n\r\n      <select\r\n        className = 'select__control'\r\n        id ={htmlFor}\r\n        value={value}\r\n        onChange={onChange}\r\n      >\r\n        {props.children}\r\n      </select>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n","import './CreatingForm.scss';\r\nimport Button from '../../Components/Button/Button'\r\nimport Input from '../../Components/Input/Input'\r\nimport Select from '../../Components/Select/Select'\r\n\r\nimport axios from '../../axios/axios'\r\nimport React, { Component } from 'react';\r\n\r\n\r\nconst initialState ={\r\n  rightAnswerId: 1,\r\n  sendError: false,\r\n  submitting: false,\r\n  isFormValid: false,\r\n  quiz: [],\r\n  inputs: {\r\n    question: {\r\n      id: 0,\r\n      value: '',\r\n      type: 'text',\r\n      label: 'Введите вопрос',\r\n      errorMessage: 'Пустое поле',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n      }\r\n    },\r\n    option1: {\r\n      id: 1,\r\n      value: '',\r\n      type: 'text',\r\n      label: 'Вариант 1',\r\n      errorMessage: 'Пустое поле',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n      }\r\n    },\r\n    option2: {\r\n      id: 2,\r\n      value: '',\r\n      type: 'text',\r\n      label: 'Вариант 2',\r\n      errorMessage: 'Пустое поле',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n      }\r\n    },\r\n    option3: {\r\n      id: 3,\r\n      value: '',\r\n      type: 'text',\r\n      label: 'Вариант 3',\r\n      errorMessage: 'Пустое поле',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n      }\r\n    },\r\n    option4: {\r\n      id: 4,\r\n      value: '',\r\n      type: 'text',\r\n      label: 'Вариант 4',\r\n      errorMessage: 'Пустое поле',\r\n      valid: false,\r\n      touched: false,\r\n      validation: {\r\n        required: true,\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nclass CreateTestForm extends Component {\r\n  state = {...initialState}\r\n\r\n  validateControl(value, validation){\r\n    if(!validation) return true;\r\n    let isValid = true;\r\n\r\n    if(validation.required){\r\n      isValid = value.trim()!=='' && isValid\r\n    }\r\n\r\n    if(validation.minLength){\r\n      isValid = value.length >= validation.minLength && isValid\r\n    }\r\n     return isValid\r\n  }\r\n\r\n \r\n  onChangeHandler = (inputName, event) => {\r\n    const inputs = {...this.state.inputs};\r\n    const input = {...inputs[inputName]};\r\n    input.touched = true;\r\n\r\n    inputs[inputName] = input;\r\n\r\n    input.value = event.target.value;\r\n    input.valid = this.validateControl(input.value, input.validation);\r\n\r\n    const isFormValid = Object.keys(inputs).every((key)=> {\r\n      return inputs[key].valid\r\n    });\r\n    \r\n    this.setState({inputs, isFormValid})\r\n  }\r\n\r\n  resetForm = () =>{\r\n     this.setState(initialState);\r\n  }\r\n\r\n\r\n  renderInputs() {\r\n    const inputs = Object.keys(this.state.inputs).map((inputName)=> {\r\n      const input = this.state.inputs[inputName];\r\n      return (\r\n        <Input\r\n          touched = {input.touched}\r\n          key = {inputName + input.id} \r\n          value = {input.value}\r\n          type = {input.type}\r\n          label = {input.label}\r\n          htmlFor = {`${inputName}`}\r\n          errorMessage = {input.errorMessage}\r\n          isValid = {input.valid}\r\n          onChange = { this.onChangeHandler.bind(this,inputName) }\r\n        />\r\n      )\r\n    });\r\n    return inputs\r\n  }\r\n\r\n  addQuestion=()=>{\r\n    const {\r\n      rightAnswerId,\r\n      isFormValid, \r\n      inputs:{question,option1,option2,option3,option4},\r\n    } = this.state;\r\n\r\n    if(!isFormValid) return;\r\n\r\n    const quiz = [...this.state.quiz];\r\n\r\n    quiz.push({\r\n      question: question.value,\r\n      answers: [\r\n        { text: option1.value, id: option1.id},\r\n        { text: option2.value, id: option2.id},\r\n        { text: option3.value, id: option3.id},\r\n        { text: option4.value, id: option4.id},\r\n      ],\r\n      rightAnswerId\r\n    });\r\n\r\n    this.setState({\r\n      ...initialState, quiz\r\n    })\r\n  }\r\n\r\n  createTest= async e =>{\r\n    try {\r\n      await axios.post('/quizes.json', this.state.quiz);\r\n      this.setState(initialState);\r\n    } catch (e){\r\n      console.log(e);\r\n      this.setState({sendError: true});\r\n    }\r\n  }\r\n\r\n  selectChangeHandler = event => {\r\n    this.setState({rightAnswerId: +event.target.value})\r\n  }\r\n\r\n  submitHandler =(event, action)=>{\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  render() {\r\n    const {sendError,rightAnswerId, quiz, isFormValid} = this.state;\r\n    const errorMessage = \r\n      (sendError && <p className = 'creating-form__message'>Ошибка при создании теста</p>)\r\n\r\n    return (\r\n      <form action=\"\" onSubmit ={this.submitHandler} className = 'creating-form'>\r\n        {errorMessage}\r\n        { this.renderInputs() }\r\n        <Select\r\n          value = {rightAnswerId}\r\n          htmlFor = 'select'\r\n          onChange = {this.selectChangeHandler}\r\n          label = 'Номер правильного ответа'>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n          <option value=\"4\">4</option>\r\n        </Select>\r\n\r\n        <div className = 'creating-form__buttons'>\r\n          <Button\r\n            disabled={!isFormValid}\r\n            onClick={this.addQuestion}\r\n            theme='success'\r\n            classes='creating-form__btn'>\r\n            Добавить вопрос\r\n          </Button>\r\n          <Button\r\n            disabled={!quiz.length} \r\n            onClick={this.createTest}\r\n            classes='creating-form__btn'\r\n            theme='info'>\r\n            Создать тест\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTestForm;","import React from 'react';\r\nimport './CreatingPage.scss';\r\nimport CreatingForm from '../../Container/CreatingForm/CreatingForm'\r\n\r\nclass CreatingPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='creating-page'>\r\n        <h1 className='creating-page__title'>Создание теста</h1>\r\n        <CreatingForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatingPage;","import axios from '../../axios/axios';\r\nimport {\r\n  QUIZ_LIST_LOADING_STARTED,\r\n  QUIZ_LIST_SUCCESS,\r\n  QUIZ_LIST_ERROR,\r\n} from '../actionTypes/actionTypes';\r\n\r\nexport function getQuizList(){\r\n  return async function(dispatch){\r\n    dispatch(quizListLoadingStarted());\r\n    try{\r\n      const response = await axios.get('/quizes.json');\r\n\r\n      const quizes = Object.keys(response.data).map( (quizKey, index) => {\r\n          return {id: quizKey, name: `Тест №${index+1}`}\r\n      });\r\n\r\n      dispatch(quizListSuccess(quizes))\r\n    } catch (e){\r\n      dispatch(quizListError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function quizListLoadingStarted(){\r\n  return {\r\n    type: QUIZ_LIST_LOADING_STARTED\r\n  }\r\n}\r\n\r\n\r\nexport function quizListSuccess(quizes){\r\n  return {\r\n    type: QUIZ_LIST_SUCCESS,\r\n    quizes\r\n  }\r\n}\r\n\r\nexport function quizListError(e){\r\n  return {\r\n    type: QUIZ_LIST_ERROR,\r\n    error: e\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './QuizListPage.scss';\r\n\r\nimport {NavLink} from 'react-router-dom'\r\nimport Loader from '../../Components/Loader/Loader'\r\n\r\nimport {getQuizList} from '../../store/actions/quizListPageActions'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nclass QuizListPage extends Component {\r\n\r\n  componentDidMount() {\r\n    if(!this.props.quizes.length) this.props.getQuizList()\r\n  }\r\n\r\n  renderQuizes(){\r\n    return this.props.quizes.map( (quiz)=>(\r\n      <li className='quiz-list__item' key={quiz.id}>\r\n        <NavLink className='quiz-list__link' to={'/redux-quiz/'+quiz.id}>\r\n          {quiz.name}\r\n        </NavLink>\r\n      </li>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const list = \r\n      <ul className= 'quiz-list'>\r\n        { this.renderQuizes() }\r\n      </ul>;\r\n      \r\n    return (\r\n      <div className='quiz-list-page'>\r\n        <h1 className='quiz-list-page__header'>Список тестов</h1>\r\n        {this.props.loading\r\n          ? <Loader className ='quiz-list-page__loader' />\r\n          : this.props.error\r\n            ? <p>Во время загрузки произошла ошибка</p>\r\n            : list\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({quizListPageState}) {\r\n  return {\r\n    quizes: quizListPageState.quizes,\r\n    loading: quizListPageState.loading,\r\n    error: quizListPageState.error\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getQuizList: () => dispatch(getQuizList())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizListPage);","import React, { Component } from 'react';\nimport Layout from './Container/Layout/Layout';\nimport QuizPage from './Components/QuizPage/QuizPage'\nimport AuthPage from './Container/AuthPage/AuthPage'\nimport CreatingPage from './Components/CreatingPage/CreatingPage'\nimport QuizListPage from './Container/QuizListPage/QuizListPage'\nimport {Route, Switch, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nclass App extends Component {\n\n  render() {\n    const {authorized} = this.props;\n    return (\n      <div className=\"App\">\n        <Layout >\n          <Switch>\n            <Route path='/redux-quiz/auth' render={()=>(\n              authorized\n                ? <Redirect to=\"/redux-quiz\"/>\n                : <AuthPage/>\n            )}/>\n            <Route path='/redux-quiz/quiz-creator' component={CreatingPage}/>\n            <Route path='/redux-quiz/:id' component={QuizPage}/>\n            <Route path='/redux-quiz' exact component={QuizListPage}/>\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({authFormState}){\n  return{\n    authorized: authFormState.authorized\n  }\n}\n\nexport default connect(mapStateToProps, null)(App);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  QUIZ_LIST_LOADING_STARTED,\r\n  QUIZ_LIST_SUCCESS,\r\n  QUIZ_LIST_ERROR,\r\n} from '../actionTypes/actionTypes';\r\n\r\nconst initialState = {\r\n  quizes: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default function quizListPageReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case QUIZ_LIST_LOADING_STARTED:\r\n      return {\r\n        ...state, loading: true\r\n      }\r\n\r\n    case QUIZ_LIST_SUCCESS:\r\n      return {\r\n       ...initialState, quizes: action.quizes\r\n      }\r\n\r\n    case QUIZ_LIST_ERROR:\r\n      return {\r\n        ...state, loading: false, error: action.error\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  QUIZ_LOADING_START,\r\n  QUIZ_LOADING_END,\r\n  QUIZ_SUCCESS,\r\n  QUIZ_ERROR,\r\n  RESET_QUIZ,\r\n  SET_ANSWER,\r\n  FINISH_QUIZ,\r\n  NEXT_QUESTION,\r\n  SET_CURRENT_QUIZ_ID,\r\n} from '../actionTypes/actionTypes';\r\n\r\nconst initialState = {\r\n  quizes: {},\r\n  currentQuizId: null,\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\n\r\nconst quizInitialState = {\r\n  chosenAnswerId: null,\r\n  numberOfQuestion: 0,\r\n  answersArray: [],\r\n  isFinished: false,\r\n};\r\n\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n\r\n  function getUpdatedQuizes(prop){\r\n    const currentQuizId = state.currentQuizId;\r\n    const quiz = {...state.quizes[currentQuizId], ...prop} ;\r\n    \r\n    return  {...state.quizes, [currentQuizId]: quiz};\r\n  }\r\n\r\n  switch (action.type) {\r\n\r\n    case SET_CURRENT_QUIZ_ID:\r\n      return {\r\n        ...state, currentQuizId: action.id\r\n      }\r\n\r\n    case QUIZ_LOADING_START:\r\n      return {\r\n        ...state, loading: true\r\n      }\r\n\r\n    case QUIZ_LOADING_END:\r\n      return {\r\n        ...state, loading: false\r\n      }\r\n\r\n    case RESET_QUIZ:\r\n      return {...state, quizes: getUpdatedQuizes(quizInitialState)}\r\n\r\n    case QUIZ_SUCCESS:\r\n      return {...state, quizes: getUpdatedQuizes({...quizInitialState,  quiz: action.quiz})} \r\n\r\n\r\n    case QUIZ_ERROR:\r\n      return {\r\n        ...state, error: action.error\r\n      }\r\n\r\n\r\n    case FINISH_QUIZ:\r\n      return {...state, quizes: getUpdatedQuizes({isFinished: true})}\r\n\r\n    case NEXT_QUESTION:\r\n      const numberOfQuestion =  state.quizes[state.currentQuizId].numberOfQuestion+1;\r\n      return {...state, quizes: getUpdatedQuizes({numberOfQuestion})} \r\n\r\n\r\n    case SET_ANSWER:\r\n      const answersArray= [\r\n        ...state.quizes[state.currentQuizId].answersArray\r\n        , action.answer.state\r\n      ];\r\n\r\n      return {...state, quizes: getUpdatedQuizes({answersArray, chosenAnswerId: action.answer.chosenAnswerId})} \r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_EXIT\r\n} from '../actionTypes/actionTypes';\r\n\r\nconst initialState = {\r\n  authorized: false\r\n};\r\n\r\nexport default function authFormReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        authorized: true,\r\n      }\r\n\r\n    case LOGIN_EXIT:\r\n      return initialState\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {combineReducers} from 'redux'\r\nimport quizListPageReducer from './quizListPageReducer'\r\nimport quizReducer from './quizReducer'\r\nimport authFormReducer from './authFormReducer'\r\n\r\nexport default combineReducers({\r\n  quizListPageState: quizListPageReducer,\r\n  quizesState: quizReducer,\r\n  authFormState: authFormReducer,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nimport './css/normalize.css';\nimport './css/custom_reset.css';\nimport './css/styles.css';\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ \n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ trace: true, traceLimit: 25 })\n    : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}